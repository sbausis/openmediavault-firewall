#!/bin/sh
#
# @license   http://www.gnu.org/licenses/gpl.html GPL Version 3
# @author    Simon Baur <sbausis@gmx.net>
# @copyright Copyright (c) 2015 Simon Baur
#
# This file is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# This file is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this file. If not, see <http://www.gnu.org/licenses/>.

set -e

. /etc/default/openmediavault
. /usr/share/openmediavault/scripts/helper-functions

OMV_FIREWALL_CONFIG=${OMV_IPTABLES_CONFIG:-"/etc/network/if-pre-up.d/openmediavault-firewall"}
OMV_INTERFACES_FILE=${OMV_INTERFACES_FILE:-"/etc/iptables/interfaces"}

# Enable/disable service
if [ "$(omv_config_get "//services/firewall/enable")" != "1" ]; then
	rm -f ${OMV_INTERFACES_FILE} ${OMV_FIREWALL_CONFIG} /etc/iptables/rules.d/*.rule
	exit 0
fi

# Do some cool Stuff
Interfaces_File() {
	OMV_PUBLIC_IF=$(omv_config_get "//services/firewall/public-if")
	OMV_PUBLIC_ADDR=$(omv_config_get "//services/firewall/public-addr")
	[ -z "${OMV_PUBLIC_ADDR}" ] && OMV_PUBLIC_ADDR=$(ifconfig -a ${OMV_PUBLIC_IF} | grep 'inet addr' | sed 's/.*addr:\([0-9]\+.[0-9]\+.[0-9]\+.[0-9]\+\)[ ]\+.*/\1/')
	OMV_PRIVATE_IF=$(omv_config_get "//services/firewall/private-if")
	OMV_PRIVATE_ADDR=$(omv_config_get "//services/firewall/private-addr")
	[ -z "${OMV_PRIVATE_ADDR}" ] && OMV_PRIVATE_ADDR=$(ifconfig -a ${OMV_PRIVATE_IF} | grep 'inet addr' | sed 's/.*addr:\([0-9]\+.[0-9]\+.[0-9]\+.[0-9]\+\)[ ]\+.*/\1/')
	cat <<EOF > ${OMV_INTERFACES_FILE}
#!/bin/bash

echo "## FIREWALL  ##"

export IF_PUBLIC=${OMV_PUBLIC_IF}
export SN_PUBLIC=${OMV_PUBLIC_ADDR}

export IF_PRIVATE=${OMV_PRIVATE_IF}
export SN_PRIVATE=${OMV_PRIVATE_ADDR}

echo " -> PUBLIC:  ${OMV_PUBLIC_IF} ${OMV_PUBLIC_ADDR}"
echo " -> PRIVATE: ${OMV_PRIVATE_IF} ${OMV_PRIVATE_ADDR}"
EOF
}

Rule_Clear() {
	local OMV_RULE_FILE=${OMV_RULE_FILE:-"/etc/iptables/rules.d/00_Clear.rule"}
	
	cat <<"EOF" > ${OMV_RULE_FILE}
#!/bin/bash

echo "#    CLEAR    #"

# dearming iptables.. !! you are unsecure !!
iptables -P INPUT ACCEPT
iptables -P OUTPUT ACCEPT
iptables -P FORWARD ACCEPT

# arming iptables.. you completely shut off
#iptables -P INPUT DROP
#iptables -P FORWARD DROP
#iptables -P OUTPUT DROP

# arming iptables.. you are protected
#iptables -P INPUT DROP
#iptables -P FORWARD DROP
#iptables -P OUTPUT ACCEPT

# clear standart Tables
iptables -F
iptables -X
# Zero out Packet Counter
iptables -Z

# clear all custom Tables
for table in $(</proc/net/ip_tables_names); do
        iptables -t $table -F
        iptables -t $table -X
		# Zero out Packet Counter
        iptables -t $table -Z
done

# Enable routing.
echo 0 > /proc/sys/net/ipv4/ip_forward

# Prevent SYN floods from consuming memory resources:
echo 0 > /proc/sys/net/ipv4/tcp_syncookies

exit 0
EOF
}

Rule_Defaults() {
	local OMV_RULE_FILE=${OMV_RULE_FILE:-"/etc/iptables/rules.d/10_Defaults.rule"}
	
	cat <<"EOF" > ${OMV_RULE_FILE}
#!/bin/bash

echo "#    DEFAULTS    #"

exit 0
EOF
}

Firewall_Config() {
	rm -f "/etc/network/if-pre-up.d/openmediavault-iptables"
	cat <<EOF > ${OMV_FIREWALL_CONFIG}
#!/bin/sh
# This configuration file is auto-generated.
# WARNING: Do not edit this file, your changes will be lost.

/etc/iptables/openmediavault-firewall start
EOF
	chmod 755 ${OMV_FIREWALL_CONFIG}
}

rm -f /etc/iptables/rules.d/*.rule

Interfaces_File
Rule_Clear
Rule_Defaults
Firewall_Config

exit 0
